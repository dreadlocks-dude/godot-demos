extends Node2D

# The higher - the slower is the animation
var max_delay := 0.050
# A small visible pause after a new map is autogenerated
var pause_between_runs := 0.5
# sinusoid shift speed
var sinusoid_speed := 0.2
# sinusoid amplitude - governs masimum number of repititions of the same action
var sinusoid_amplitude := 4
var minimum_repeats := 1

var tex: ImageTexture
var repeats_left := 0
var current_action := 0
var frame_delay := 0.0
var total_runtime := 0.0

enum ACTIONS {CLEAN, GENERATE_ROOMS, SMOOTHEN_WALLS, ADD_NOISE}

func _ready() -> void:
    randomize()
    $Generator.generate()
    tex = ImageTexture.new()
    tex.create_from_image($Generator.MapData, 0)
    $Renderer.set_texture(tex)

func pick_next_action():
    var phase := int(cos(total_runtime * sinusoid_speed) * sinusoid_amplitude) + sinusoid_amplitude + minimum_repeats
    repeats_left = randi() % phase + phase
    current_action = randi() % len(ACTIONS) 
    if current_action == ACTIONS.CLEAN:
        # Noise cleaning is kinda special 
        # it's best to just run it 3 times in a row, skipping the animation
        _on_Clean_pressed()
        _on_Clean_pressed()
        _on_Clean_pressed()
        repeats_left = 0


func _process(delta: float) -> void:
    total_runtime += delta
    if not $RelaxMode.pressed:
        return

    if frame_delay > 0:
        frame_delay = max(frame_delay - delta, 0)
        return
    else:
        frame_delay = max_delay
    
    if repeats_left == 0:
        if current_action == ACTIONS.CLEAN:
            # Assume after cleaning we get a nice map
            # let's add a delay to appreciate it
            frame_delay += pause_between_runs
        elif current_action == ACTIONS.SMOOTHEN_WALLS:
            # Smoothen is very noisy in the current implementation
            # At least one cleaning run aftet a series of smooth gives the best results
            _on_Clean_pressed()
        pick_next_action()
    else:
        repeats_left -= 1
        if current_action == ACTIONS.GENERATE_ROOMS:
            _on_ReGenerate_pressed()
        elif current_action == ACTIONS.SMOOTHEN_WALLS:
            _on_Smoothen_pressed()
        elif current_action == ACTIONS.ADD_NOISE:
            _on_AddNoise_pressed()
        else:
            print_debug("Action not implemented: ", current_action)
            repeats_left = 0


func _on_ReGenerate_pressed():
    $Generator.generate()
    tex.set_data($Generator.MapData)

func _on_Smoothen_pressed():
    $Generator.filterPass()
    tex.set_data($Generator.MapData)

func _on_AddNoise_pressed():
    $Generator.addNoise()
    tex.set_data($Generator.MapData)

func _on_Clean_pressed():
    $Generator.clean()
    tex.set_data($Generator.MapData)
